{"version":3,"sources":["Globals.tsx","Course.tsx","OneSemester.tsx","Multisemester.tsx","SingleSemester.tsx","logo.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["example_courses","crsName","crsDescription","crsCredits","semester_list","course_set","semester_number","Course_MS","Course_SS","type","className","onClick","course_name","sem_num","forEach","course","index","splice","Semester_MS","map","Semester_SS","useState","sum","addSum","v","MultiSemester","SingleSemester","focused_semester","updateFocus","current_semester_num","changeSemNum","console","log","App","view_mode","updateView","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c6ce4b8.chunk.js","sourcesContent":["//import React, { FunctionComponent } from \"react\";\nimport \"./App.css\";\nimport { SemesterIntf } from \"./OneSemester\";\nimport { CourseIntf } from \"./Course\";\n\nexport const example_courses: CourseIntf[] = [{ crsName: \"EGGG101\", crsDescription: \"Introduction to Engineering\", crsCredits: 2 }, { crsName: \"CISC108\", crsDescription: \"Introduction to Somputer Science I\", crsCredits: 3 }, { crsName: \"MATH241\", crsDescription: \"Analytic Geometry and Calculus A\", crsCredits: 4 }, { crsName: \"ENGL110\", crsDescription: \"Seminar in Composition\", crsCredits: 3 }, { crsName: \"Breadth Req. I\", crsDescription: \"Breadth Requirement Elective (1/5)\", crsCredits: 3 },\n    { crsName: \"CISC 181\", crsDescription: \" Introduction to Computer Science II\", crsCredits: 3 }, { crsName: \"MATH 242\", crsDescription: \"Analytic Geometry & Calculus B\", crsCredits: 4 }, { crsName: \"CISC 210\", crsDescription: \"Introduction to Systems Programming\", crsCredits: 3 }, { crsName: \"Laboratory Science I\", crsDescription: \"Laboratory Science (1/3)\", crsCredits: 4 }, { crsName: \"Breadth Req. II\", crsDescription: \"Breadth Requirement Elective (2/5)\", crsCredits: 3 },\n    { crsName: \"CISC 220\", crsDescription: \"Data Structures\", crsCredits: 3 }, { crsName: \"CISC 260\", crsDescription: \"Machine Org. & Assembly Language\", crsCredits: 3 }, { crsName: \"MATH 210\", crsDescription: \"Discrete Mathematics I\", crsCredits: 3 }, { crsName: \"Laboratory Science II\", crsDescription: \"Laboratory Science (2/3)\", crsCredits: 4 }, { crsName: \"Breadth Req. III\", crsDescription: \"Breadth Requirement Elective (3/5)\", crsCredits: 3 },\n    { crsName: \"CISC 355\", crsDescription: \"Computers, Ethics & Society\", crsCredits: 3 }, { crsName: \"CISC 275\", crsDescription: \"Introduction to Software Engineering\", crsCredits: 3 }, { crsName: \"MATH 205\", crsDescription: \"Statistical Methods\", crsCredits: 3 }, { crsName: \"Laboratory Science III\", crsDescription: \"Laboratory Science (3/3)\", crsCredits: 4 }, { crsName: \"Breadth Req. IV\", crsDescription: \"Breadth Requirement Elective (4/5)\", crsCredits: 3 },\n    { crsName: \"CISC 320\", crsDescription: \"Introduction to Algorithms\", crsCredits: 3 }, { crsName: \"CISC 361\", crsDescription: \"Operating Systems\", crsCredits: 3 }, { crsName: \"CISC 304\", crsDescription: \"Logic and Programming\", crsCredits: 3 }, { crsName: \"Concentration Elective I\", crsDescription: \"Concentration Elective (1/4)\", crsCredits: 3 }, { crsName: \"General Elective I\", crsDescription: \"General Elective (1/6)\", crsCredits: 3 },\n    { crsName: \"CISC 372\", crsDescription: \"Parallel Computing\", crsCredits: 3 }, { crsName: \"CISC 303\", crsDescription: \"Automata Theory\", crsCredits: 3 }, { crsName: \"ENGL 312\", crsDescription: \"Written Communication in Business\", crsCredits: 3 }, { crsName: \"Concentration Elective II\", crsDescription: \"Concentration Elective (2/4)\", crsCredits: 3 }, { crsName: \"General Elective II\", crsDescription: \"General Elective (2/6)\", crsCredits: 3 },\n    { crsName: \"CISC498\", crsDescription: \"Computer Science Design Project I\", crsCredits: 3 }, { crsName: \"CISC 3XX\", crsDescription: \"Computer Science Elective I\", crsCredits: 3 }, { crsName: \"Concentration Elective III\", crsDescription: \"Concentration Elective (3/4)\", crsCredits: 3 }, { crsName: \"General Elective III\", crsDescription: \"General Elective (3/6)\", crsCredits: 3 }, { crsName: \"General Elective IV\", crsDescription: \"General Elective (4/6)\", crsCredits: 3 },\n    { crsName: \"CISC499\", crsDescription: \"Computer Science Design Project II\", crsCredits: 2 }, { crsName: \"CISC 3XX\", crsDescription: \"Computer Science Elective II\", crsCredits: 3 }, { crsName: \"Concentration Elective IV\", crsDescription: \"Concentration Elective (4/4)\", crsCredits: 3 }, { crsName: \"General Elective V\", crsDescription: \"General Elective (5/6)\", crsCredits: 3 }, { crsName: \"General Elective VI\", crsDescription: \"General Elective (6/6)\", crsCredits: 3 }];\n\nconst example_semester1: SemesterIntf = { course_set: [example_courses[0], example_courses[1], example_courses[2], example_courses[3], example_courses[4]], semester_number: 1 };\nconst example_semester2: SemesterIntf = { course_set: [example_courses[5], example_courses[6], example_courses[7], example_courses[8], example_courses[9]], semester_number: 2 };\nconst example_semester3: SemesterIntf = { course_set: [example_courses[10], example_courses[11], example_courses[12], example_courses[13], example_courses[14]], semester_number: 3 };\nconst example_semester4: SemesterIntf = { course_set: [example_courses[15], example_courses[16], example_courses[17], example_courses[18], example_courses[19]], semester_number: 4 };\nconst example_semester5: SemesterIntf = { course_set: [example_courses[20], example_courses[21], example_courses[22], example_courses[23], example_courses[24]], semester_number: 5 };\nconst example_semester6: SemesterIntf = { course_set: [example_courses[25], example_courses[26], example_courses[27], example_courses[28], example_courses[29]], semester_number: 6 };\nconst example_semester7: SemesterIntf = { course_set: [example_courses[30], example_courses[31], example_courses[32], example_courses[33], example_courses[34]], semester_number: 7 };\nconst example_semester8: SemesterIntf = { course_set: [example_courses[35], example_courses[36], example_courses[37], example_courses[38], example_courses[39]], semester_number: 8 };\n\nexport const semester_list: SemesterIntf[] = [example_semester1, example_semester2, example_semester3, example_semester4, example_semester5, example_semester6, example_semester7, example_semester8];","import React, { FunctionComponent } from \"react\";\nimport \"./App.css\";\nimport { semester_list } from \"./Globals\";\n\nexport type CourseIntf = {\n    crsName: string,\n    crsDescription: string,\n    crsCredits: number,\n    semester_number?: number\n}\n\nconst remove_class = (sem_num: number, course_name: string) =>{\n    semester_list[sem_num-1].course_set.forEach((course: CourseIntf, index: number)=>{\n        if(course.crsName == course_name){\n            semester_list[sem_num-1].course_set.splice(index,1);\n        }\n    });\n};\nexport const Course_MS: FunctionComponent<CourseIntf> = ({ crsName, crsDescription, crsCredits }) =>\n\n    <tr>\n        <td><b>{crsName}:</b> {crsDescription}</td>\n        <td>{crsCredits}</td>\n    </tr>\n    ;\n\nexport const Course_SS: FunctionComponent<CourseIntf> = ({ crsName, crsDescription, crsCredits, semester_number }) =>\n\n    <tr>\n        <td><b>{crsName}:</b> {crsDescription}</td>\n        <td>{crsCredits}</td>\n        <td> <button type=\"button\" className=\"btn btn-primary m-3 \" onClick={() => remove_class(semester_number as number,crsName)}>X</button></td>\n    </tr>\n    ;","import React, { FunctionComponent, useState } from \"react\";\nimport \"./App.css\";\nimport { Course_MS, Course_SS, CourseIntf } from \"./Course\";\n\nexport type SemesterIntf = {\n    //course_1: CourseIntf,\n    //course_2: CourseIntf,\n    //course_3: CourseIntf,\n    //course_4: CourseIntf,\n    //course_5: CourseIntf,\n    course_set: CourseIntf[],\n    semester_number: number\n}\n\n\nexport const Semester_MS: FunctionComponent<SemesterIntf> = ({ course_set, semester_number }) =>\n    <div className=\"col-md-6\">\n        <h2 className=\"Semester\">Semester {semester_number}</h2>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Course</th>\n                    <th>Credits</th>\n                </tr>\n            </thead>\n\n            <tbody>\n\n                {course_set.map((course: CourseIntf, index: number) => {\n                    return <Course_MS key={index} crsName={course.crsName} crsDescription={course.crsDescription} crsCredits={course.crsCredits} />;\n                })}\n\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td><b>Total Credits</b></td>\n                    <td><b>{course_set[0].crsCredits + course_set[1].crsCredits + course_set[2].crsCredits + course_set[3].crsCredits + course_set[4].crsCredits}</b></td>\n                </tr>\n            </tfoot>\n        </table>\n\n    </div>\n    ;\n\nexport const Semester_SS: FunctionComponent<SemesterIntf> = ({ course_set, semester_number }) => {\n\n    const [sum, addSum] = useState(0);\n\n    const addCrdts = (course_set: CourseIntf[]): number => {\n        course_set.forEach((course: CourseIntf) => {\n            addSum(v => v + course.crsCredits);\n        });\n        return sum;\n    };\n\n    return <div className=\"col-md-6\">\n        <h2 className=\"Semester\">Semester {semester_number}</h2>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Course</th>\n                    <th>Credits</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n\n            <tbody>\n\n                {course_set.map((course: CourseIntf, index: number) => {\n                    return <Course_SS key={index} crsName={course.crsName} crsDescription={course.crsDescription} crsCredits={course.crsCredits} semester_number={semester_number} />;\n                })}\n\n            </tbody >\n            <tfoot>\n                <tr>\n                    <td><b>Total Credits</b></td>\n                    <td><b>{addCrdts}</b></td>\n                </tr>\n            </tfoot>\n        </table >\n\n        <div className=\"col-sm-2 col-md-3 col-lg-4 text-center\">\n            <button type=\"button\" className=\"btn btn-secondary m-3\" >Delete All Courses</button>\n        </div>\n\n\n    </div >\n    ;\n};","import React from \"react\";\nimport \"./App.css\";\nimport { Semester_MS } from \"./OneSemester\";\nimport { semester_list } from \"./Globals\";\n\nfunction MultiSemester(): JSX.Element {\n\n    return (\n\n        <div className=\"container-fluid padding\">\n\n            <div className=\"row padding\">\n                <div className=\"Year\">\n                    <h4>First Year</h4>\n                </div>\n                <Semester_MS course_set={semester_list[0].course_set}\n                    semester_number={semester_list[0].semester_number}\n                />\n\n                <Semester_MS course_set={semester_list[1].course_set}\n                    semester_number={semester_list[1].semester_number}\n                />\n            </div>\n\n            <div className=\"row padding\">\n                <div className=\"Year\">\n                    <h4>Second Year</h4>\n                </div>\n\n                <Semester_MS course_set={semester_list[2].course_set}\n                    semester_number={semester_list[2].semester_number}\n                />\n\n                <Semester_MS course_set={semester_list[3].course_set}\n                    semester_number={semester_list[3].semester_number}\n                />\n            </div>\n\n            <div className=\"row padding\">\n                <div className=\"Year\">\n                    <h4>Third Year</h4>\n                </div>\n\n                <Semester_MS course_set={semester_list[4].course_set}\n                    semester_number={semester_list[4].semester_number}\n                />\n\n                <Semester_MS course_set={semester_list[5].course_set}\n                    semester_number={semester_list[5].semester_number}\n                />\n            </div>\n\n            <div className=\"row padding\">\n\n                <div className=\"Year\">\n                    <h4>Fourth Year</h4>\n                </div>\n\n                <Semester_MS course_set={semester_list[6].course_set}\n                    semester_number={semester_list[6].semester_number}\n                />\n\n                <Semester_MS course_set={semester_list[7].course_set}\n                    semester_number={semester_list[7].semester_number}\n                />\n            </div>\n\n            <div className=\"col text-center\">\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-3\">Add Semester</button>\n                <button type=\"button\" className=\"btn btn-danger btn-lg m-3\">Remove All</button>\n                <button type=\"button\" className=\"btn btn-secondary btn-lg m-3\">Reset</button>\n            </div>\n        </div>\n    );\n}\n\nexport default MultiSemester;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Semester_SS } from \"./OneSemester\";\nimport { semester_list } from \"./Globals\";\n\nfunction SingleSemester(): JSX.Element {\n\n    const[focused_semester, updateFocus] = useState(<Semester_SS course_set={semester_list[0].course_set}\n        semester_number={semester_list[0].semester_number}\n    />);\n\n    const [current_semester_num, changeSemNum] = useState(0);\n\n    const next_click=()=>{\n        if(current_semester_num<7){\n            changeSemNum(v=>v+1);\n            console.log(current_semester_num);\n            updateFocus(<Semester_SS course_set={semester_list[current_semester_num+1].course_set}\n                semester_number={semester_list[current_semester_num+1].semester_number}\n            />);\n        }\n    };\n    const prev_click=()=>{\n        if(current_semester_num>0){\n            changeSemNum(v=>v-1);\n            console.log(current_semester_num);\n            updateFocus(<Semester_SS course_set={semester_list[current_semester_num-1].course_set}\n                semester_number={semester_list[current_semester_num-1].semester_number}\n            />);\n        }\n    };\n\n    return (\n\n        <div className=\"container-fluid padding text-left\">\n\n            <div className=\"row padding\">\n                <div className=\"col-sm-2 col-md-3 col-lg-4 text-center\">\n                    <button type=\"button\" className=\"btn btn-primary m-3\" onClick={() => prev_click()}>Previous Semester</button>\n                </div>\n                <div className=\"col-sm-2 col-md-3 col-lg-4 text-center\">\n                    <h3>Semester #{current_semester_num+1}</h3>\n                </div>\n                <div className=\"col-sm-2 col-md-3 col-lg-4 text-center\">\n                    <button type=\"button\" className=\"btn btn-primary m-3\" onClick={() => next_click()}>Next Semester</button>\n                </div>\n            </div>\n\n            {focused_semester}            \n\n        </div>\n\n        \n    );\n}\n\nexport default SingleSemester;","export default __webpack_public_path__ + \"static/media/logo.4f3a436c.png\";","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport MultiSemester from \"./Multisemester\";\nimport SingleSemester from \"./SingleSemester\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.png\";\n\nfunction App(): JSX.Element {\n\n    const [view_mode, updateView] = useState(<SingleSemester />);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1 >UD CIS Scheduler</h1>\n                <div className=\"col text-center\">\n                    <button type=\"button\" className=\"btn btn-primary m-3\" onClick={() => updateView(<SingleSemester />)}>Single-Semester View</button>\n                    <button type=\"button\" className=\"btn btn-primary m-3\" onClick={() => updateView(<MultiSemester />)}>4 year plan</button>\n                </div>\n            </header>\n\n            <div className=\"text-left\"><img className=\"logo\" src={logo} alt=\"Logo\" /></div>\n\n            <div className=\"text-right\">\n                <button type=\"button\" className=\"btn btn-primary m-3 \">Export PDF</button>\n            </div>\n\n            <div className=\"custom\">\n                <button type=\"button\" className=\"btn btn-primary m-3\" onClick={() => updateView(<SingleSemester />)}>Custom</button>\n                \n            </div>\n\n            <hr></hr>\n\n            {view_mode}\n\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}