{"version":3,"sources":["Globals.tsx","OneSemester.tsx","Multisemester.tsx","SingleSemester.tsx","logo.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["example_courses","crsName","crsDescription","crsCredits","semester_list","course_set","semester_number","Semester_MS","useState","creditSum","addSum","useEffect","forEach","course","v","Course_MS","className","map","index","Semester_SS","Course_SS","type","onClick","course_name","sem_num","splice","length","MultiSemester","creditTotal","addTotal","SemesterCount","addCount","semester","empty_sem","push","add_empty_semester","SingleSemester","focused_semester","updateFocus","current_semester_num","changeSemNum","console","log","App","view_mode","updateView","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2896804b.chunk.js","sourcesContent":["//import React, { FunctionComponent } from \"react\";\nimport \"./App.css\";\nimport { SemesterIntf } from \"./OneSemester\";\nimport { CourseIntf } from \"./Course\";\n\nexport const example_courses: CourseIntf[] = [{ crsName: \"EGGG101\", crsDescription: \"Introduction to Engineering\", crsCredits: 2 }, { crsName: \"CISC108\", crsDescription: \"Introduction to Somputer Science I\", crsCredits: 3 }, { crsName: \"MATH241\", crsDescription: \"Analytic Geometry and Calculus A\", crsCredits: 4 }, { crsName: \"ENGL110\", crsDescription: \"Seminar in Composition\", crsCredits: 3 }, { crsName: \"Breadth Req. I\", crsDescription: \"Breadth Requirement Elective (1/5)\", crsCredits: 3 },\n    { crsName: \"CISC 181\", crsDescription: \" Introduction to Computer Science II\", crsCredits: 3 }, { crsName: \"MATH 242\", crsDescription: \"Analytic Geometry & Calculus B\", crsCredits: 4 }, { crsName: \"CISC 210\", crsDescription: \"Introduction to Systems Programming\", crsCredits: 3 }, { crsName: \"Laboratory Science I\", crsDescription: \"Laboratory Science (1/3)\", crsCredits: 4 }, { crsName: \"Breadth Req. II\", crsDescription: \"Breadth Requirement Elective (2/5)\", crsCredits: 3 },\n    { crsName: \"CISC 220\", crsDescription: \"Data Structures\", crsCredits: 3 }, { crsName: \"CISC 260\", crsDescription: \"Machine Org. & Assembly Language\", crsCredits: 3 }, { crsName: \"MATH 210\", crsDescription: \"Discrete Mathematics I\", crsCredits: 3 }, { crsName: \"Laboratory Science II\", crsDescription: \"Laboratory Science (2/3)\", crsCredits: 4 }, { crsName: \"Breadth Req. III\", crsDescription: \"Breadth Requirement Elective (3/5)\", crsCredits: 3 },\n    { crsName: \"CISC 355\", crsDescription: \"Computers, Ethics & Society\", crsCredits: 3 }, { crsName: \"CISC 275\", crsDescription: \"Introduction to Software Engineering\", crsCredits: 3 }, { crsName: \"MATH 205\", crsDescription: \"Statistical Methods\", crsCredits: 3 }, { crsName: \"Laboratory Science III\", crsDescription: \"Laboratory Science (3/3)\", crsCredits: 4 }, { crsName: \"Breadth Req. IV\", crsDescription: \"Breadth Requirement Elective (4/5)\", crsCredits: 3 },\n    { crsName: \"CISC 320\", crsDescription: \"Introduction to Algorithms\", crsCredits: 3 }, { crsName: \"CISC 361\", crsDescription: \"Operating Systems\", crsCredits: 3 }, { crsName: \"CISC 304\", crsDescription: \"Logic and Programming\", crsCredits: 3 }, { crsName: \"Concentration Elective I\", crsDescription: \"Concentration Elective (1/4)\", crsCredits: 3 }, { crsName: \"General Elective I\", crsDescription: \"General Elective (1/6)\", crsCredits: 3 },\n    { crsName: \"CISC 372\", crsDescription: \"Parallel Computing\", crsCredits: 3 }, { crsName: \"CISC 303\", crsDescription: \"Automata Theory\", crsCredits: 3 }, { crsName: \"ENGL 312\", crsDescription: \"Written Communication in Business\", crsCredits: 3 }, { crsName: \"Concentration Elective II\", crsDescription: \"Concentration Elective (2/4)\", crsCredits: 3 }, { crsName: \"General Elective II\", crsDescription: \"General Elective (2/6)\", crsCredits: 3 },\n    { crsName: \"CISC498\", crsDescription: \"Computer Science Design Project I\", crsCredits: 3 }, { crsName: \"CISC 3XX\", crsDescription: \"Computer Science Elective I\", crsCredits: 3 }, { crsName: \"Concentration Elective III\", crsDescription: \"Concentration Elective (3/4)\", crsCredits: 3 }, { crsName: \"General Elective III\", crsDescription: \"General Elective (3/6)\", crsCredits: 3 }, { crsName: \"General Elective IV\", crsDescription: \"General Elective (4/6)\", crsCredits: 3 },\n    { crsName: \"CISC499\", crsDescription: \"Computer Science Design Project II\", crsCredits: 3 }, { crsName: \"CISC 3XX\", crsDescription: \"Computer Science Elective II\", crsCredits: 3 }, { crsName: \"Concentration Elective IV\", crsDescription: \"Concentration Elective (4/4)\", crsCredits: 3 }, { crsName: \"General Elective V\", crsDescription: \"General Elective (5/6)\", crsCredits: 3 }, { crsName: \"General Elective VI\", crsDescription: \"General Elective (6/6)\", crsCredits: 3 }];\n\nconst example_semester1: SemesterIntf = { course_set: [example_courses[0], example_courses[1], example_courses[2], example_courses[3], example_courses[4]], semester_number: 1 };\nconst example_semester2: SemesterIntf = { course_set: [example_courses[5], example_courses[6], example_courses[7], example_courses[8], example_courses[9]], semester_number: 2 };\nconst example_semester3: SemesterIntf = { course_set: [example_courses[10], example_courses[11], example_courses[12], example_courses[13], example_courses[14]], semester_number: 3 };\nconst example_semester4: SemesterIntf = { course_set: [example_courses[15], example_courses[16], example_courses[17], example_courses[18], example_courses[19]], semester_number: 4 };\nconst example_semester5: SemesterIntf = { course_set: [example_courses[20], example_courses[21], example_courses[22], example_courses[23], example_courses[24]], semester_number: 5 };\nconst example_semester6: SemesterIntf = { course_set: [example_courses[25], example_courses[26], example_courses[27], example_courses[28], example_courses[29]], semester_number: 6 };\nconst example_semester7: SemesterIntf = { course_set: [example_courses[30], example_courses[31], example_courses[32], example_courses[33], example_courses[34]], semester_number: 7 };\nconst example_semester8: SemesterIntf = { course_set: [example_courses[35], example_courses[36], example_courses[37], example_courses[38], example_courses[39]], semester_number: 8 };\n\nexport const semester_list: SemesterIntf[] = [example_semester1, example_semester2, example_semester3, example_semester4, example_semester5, example_semester6, example_semester7, example_semester8];\n\nexport const user_semesters: SemesterIntf[] = [];","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { semester_list } from \"./Globals\";\n\n\n//Created a type to define the traits of a Course\nexport type CourseIntf = {\n    crsName: string,\n    crsDescription: string,\n    crsCredits: number,\n    semester_number?: number\n}\n\n\n//Created a type to define the traits of a Semester\nexport type SemesterIntf = {\n    course_set: CourseIntf[],\n    semester_number: number\n}\n\n\n\n//Function to create, display, and modify a Semester (This version is for when viewing multiple semesters, as denoted by MS for 'Multi Semester')\nexport const Semester_MS: FunctionComponent<SemesterIntf> = ({ course_set, semester_number }) => {\n\n    //Variable to manage the credit total per semester\n    const [creditSum, addSum] = useState(0);\n\n    //Updates the Sum total at start and if the semester number or courses in the semester change\n    useEffect(() => {\n        addSum(0);\n        course_set.forEach((course: CourseIntf) => {\n            addSum(v => v + course.crsCredits);\n        });\n    }, [semester_number, course_set]);\n\n\n    //Function Defining the display characteristics of a Course in the Multi Semester View\n    const Course_MS: FunctionComponent<CourseIntf> = ({ crsName, crsDescription, crsCredits }) =>\n        <tr>\n            <td><b>{crsName}:</b> {crsDescription}</td>\n            <td className=\"text-center\">{crsCredits}</td>\n        </tr>\n        ;\n\n    //Return Statement for Multi Semester version of the Semester\n    return <div className=\"col-md-6\">\n        <h2 className=\"Semester\"><b>Semester {semester_number}</b></h2>\n\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th className=\"text-center\">Course</th>\n                    <th className=\"text-center\">Credits</th>\n                </tr>\n            </thead>\n\n            <tbody>\n\n                {course_set.map((course: CourseIntf, index: number) => {\n                    return <Course_MS key={index} crsName={course.crsName} crsDescription={course.crsDescription} crsCredits={course.crsCredits} />;\n                })}\n\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td><b>Total Credits</b></td>\n                    <td><b>{creditSum}</b></td>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n    ;\n};\n\n\n//Function to create, display, and modify a Semester (This version is for when editing one semester at a time, as denoted by SS for 'Single Semester')\nexport const Semester_SS: FunctionComponent<SemesterIntf> = ({ course_set, semester_number }) => {\n\n    //Variable to manage the credit total per semester\n    const [creditSum, addSum] = useState(0);\n\n    //Updates the Sum total at start and if the semester number or courses in the semester change\n    useEffect(() => {\n        addSum(0);\n        course_set.forEach((course: CourseIntf) => {\n            addSum(v => v + course.crsCredits);\n        });\n        \n    }, [semester_number, course_set]);\n\n\n    //Function to removes all the courses from Semester\n    const remove_allclass = (sem_num: number): void => {\n        semester_list[sem_num - 1].course_set.splice(0, semester_list[sem_num - 1].course_set.length);\n        addSum(0);\n    };\n\n    //Function to remove a single course from the Semester\n    const remove_class = (sem_num: number, course_name: string): void =>{\n        semester_list[sem_num-1].course_set.forEach((course: CourseIntf, index: number)=>{\n            if(course.crsName == course_name){\n                semester_list[sem_num-1].course_set.splice(index,1);  \n                addSum(v => v - course.crsCredits);          \n            }\n        });\n    };\n\n\n    //Function Defining the display characteristics of a Course in the Single Semester View\n    const Course_SS: FunctionComponent<CourseIntf> = ({ crsName, crsDescription, crsCredits, semester_number }) =>\n        <tr>\n            <td><b>{crsName}:</b> {crsDescription}</td>\n            <td className=\"text-center\">{crsCredits}</td>\n            <td className=\"editcourse\">\n                <button type=\"button\" className=\"btn btn-outline-secondary m-1\">Edit</button>\n                <button type=\"button\" className=\"btn btn-outline-danger m-1\" onClick={() => remove_class(semester_number as number,crsName)}>X</button>\n            </td>\n        </tr>\n    ;\n\n\n    //Return Statement for Single Semester version of the Semester\n    return <div className=\"\">\n        <table className=\"table\">\n            <thead>\n                <h2 className=\"Semester\"><b>Semester {semester_number}</b></h2>\n                <tr>\n                    <th className=\"text-center\">Courses</th>\n                    <th className=\"text-center\">Credit</th>\n                    <th className=\"Actions\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {course_set.map((course: CourseIntf, index: number) => {\n                    return <Course_SS key={index} crsName={course.crsName} crsDescription={course.crsDescription} crsCredits={course.crsCredits} semester_number={semester_number} />;\n                })}\n            </tbody >\n        </table >\n        <div>\n            <b>Total Credits:  </b>\n            <b>{creditSum}</b>\n\n        </div>\n\n        <div className=\"text-center\">\n            <button type=\"button\" className=\"btn btn-danger m-1\" onClick={() => remove_allclass(semester_number as number)}>Remove all courses</button>\n\n        </div>\n    </div >\n    ;\n};","import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport { Semester_MS, SemesterIntf, CourseIntf } from \"./OneSemester\";\nimport { semester_list } from \"./Globals\";\n\nfunction MultiSemester(): JSX.Element {\n\n    //Function to removes all the Semesters from the plan\n    const remove_all_semesters = (): void => {\n        semester_list.splice(0, semester_list.length);\n        const empty_sem: SemesterIntf = {course_set:[], semester_number: 1};\n        semester_list.push(empty_sem);\n        addTotal(0);\n    };\n\n    //Function to removes all the Semesters from the plan\n    const add_empty_semester = (): void => {\n        const empty_sem: SemesterIntf = { course_set: [], semester_number: semester_list[semester_list.length-1].semester_number + 1};\n        semester_list.push(empty_sem);\n        addCount(semester_list.length);\n    };\n\n    //Variable to manage the credit total per semester\n    const [creditTotal, addTotal] = useState(0);\n    const [SemesterCount, addCount] = useState(semester_list.length);\n\n    //Updates the Sum total at start and if the semester number or courses in the semester change\n    useEffect(() => {\n        addTotal(0);\n        addCount(semester_list.length);\n        semester_list.forEach((semester: SemesterIntf) => {\n            semester.course_set.forEach((course: CourseIntf) => {\n                addTotal(v => v + course.crsCredits);\n            }); \n        });\n    }, [semester_list]);\n\n    return (\n\n        <div className=\"container-fluid padding\">\n\n            <div className=\"row padding\">\n                {semester_list.map((semester: SemesterIntf, index: number) => {\n                    return <Semester_MS key={index} course_set={semester.course_set} semester_number={semester.semester_number}/>;\n                })}\n            </div>\n\n            <div className=\"col text-center\">\n                <p><h3>Total Credits: </h3><b>{creditTotal}</b></p>\n                <p><h3>Total Semesters: </h3><b>{SemesterCount}</b></p>\n                <button type=\"button\" className=\"btn btn-primary btn-lg m-3\" onClick={() => add_empty_semester()}>Add Semester</button>\n                <button type=\"button\" className=\"btn btn-danger btn-lg m-3\" onClick={() => remove_all_semesters()}>Clear Plan</button>\n                <form>\n                    <button type=\"submit\" className=\"btn btn-secondary btn-lg m-3\">Reset</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default MultiSemester;","import React, { useState } from \"react\";\n//import { Button, Form } from \"react-bootstrap\";\n//import { Autocomplete, TextField } from \"@mui/material\";\nimport \"./App.css\";\nimport { Semester_SS, SemesterIntf} from \"./OneSemester\";\nimport { semester_list } from \"./Globals\";\n//import data from \"./assets/data.json\";\n\nfunction SingleSemester(): JSX.Element {\n\n    const [focused_semester, updateFocus] = useState(<Semester_SS course_set={semester_list[0].course_set}\n        semester_number={semester_list[0].semester_number}\n    />);\n\n    const [current_semester_num, changeSemNum] = useState(0);\n\n    //const [inpu, setInpu] = useState<string>(\"\");\n\n    //shows next semester on click\n    const next_click = () => {\n        if (current_semester_num < semester_list.length-1) {\n            changeSemNum(v => v + 1);\n            console.log(current_semester_num);\n            updateFocus(<Semester_SS course_set={semester_list[current_semester_num + 1].course_set}\n                semester_number={semester_list[current_semester_num + 1].semester_number}\n            />);\n        }\n    };\n\n    //shows perv semester on click\n    const prev_click = () => {\n        \n        if (current_semester_num > 0) {\n            changeSemNum(v => v - 1);\n            console.log(current_semester_num);\n            updateFocus(<Semester_SS course_set={semester_list[current_semester_num - 1].course_set}\n                semester_number={semester_list[current_semester_num - 1].semester_number}\n            />);\n        }  \n    };\n\n    //Removes the semester\n    const remove_semester = () => {\n        semester_list.splice(current_semester_num,1);\n        semester_list.forEach((semester: SemesterIntf, index: number)=>{\n            semester.semester_number = index+1;\n        });\n        \n        if (current_semester_num < semester_list.length-1) {\n            console.log(current_semester_num);\n            updateFocus(<Semester_SS course_set={semester_list[current_semester_num].course_set}\n                semester_number={semester_list[current_semester_num].semester_number}\n            />);\n        }\n\n    };\n    /*\n    //Removes all the semester\n    const remove_Allsemester = () => {\n        semester_list.splice(0,semester_list.length);\n        if (current_semester_num < semester_list.length-1) {\n            console.log(current_semester_num);\n            updateFocus(<Semester_SS course_set={semester_list[current_semester_num].course_set}\n                semester_number={semester_list[current_semester_num].semester_number}\n            />);\n        }\n    };\n    */\n\n    /*function holdCourse(entered_id:string):void{\n        console.log(entered_id);\n        alert(\"Course has been added to the pool\");\n    }\n\n\n    function getAllCourses():string[]{\n        const id_list:string[]=[];\n        data.map((courseList) => {\n            id_list.push(courseList.id);\n        });\n        //console.log(id_list);\n        return id_list;\n    }\n\n    function addCourse(entered_id:string):void{\n        //console.log(entered_id);\n        //const new_crs: CourseIntf = { crsName: [], crsDescription: semester_list[semester_list.length-1].semester_number + 1, crsCredits: };\n        let new_crs: CourseIntf = { crsName: \"\", crsDescription: \"\", crsCredits: 0 }; \n        data.map((courseList) => {\n            if(courseList.id == entered_id){\n                new_crs = { crsName: courseList.id, crsDescription: courseList.name, crsCredits: parseInt(courseList.credits)};\n            }\n        });\n        semester_list[current_semester_num].course_set.push(new_crs);\n        updateFocus(<Semester_SS course_set={semester_list[current_semester_num].course_set}\n            semester_number={semester_list[current_semester_num].semester_number}\n        />);\n    }\n*/\n\n    return (\n\n        <div className=\"container-fluid padding text-left\">\n            <div className=\"row\">\n                <div className=\"col-7\">\n                    <div className=\"text-center\">\n                        <button type=\"button\" className=\"col-2 btn btn-primary m-1\" \n                            onClick={() => prev_click()}>Previous</button>\n                        <button type=\"button\" className=\"col-2 btn btn-danger m-1\" \n                            onClick={() => remove_semester()}>Remove</button>\n                        <button type=\"button\" className=\"col-2 btn btn-primary m-1\" \n                            onClick={() => next_click()}>Next</button>\n                    </div>\n\n                    {focused_semester}\n                </div>\n\n                <div className=\"col-3\">\n                    <h2 className=\"text-center text-success\"><b>Add course</b></h2> \n                </div>\n\n                <div className=\"col-2\">\n                    <h3 className=\"text-center text-warning\"><b>Requirements</b></h3>\n                </div>\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default SingleSemester;","export default __webpack_public_path__ + \"static/media/logo.4f3a436c.png\";","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport MultiSemester from \"./Multisemester\";\nimport SingleSemester from \"./SingleSemester\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.png\";\n\nfunction App(): JSX.Element {\n\n    const [view_mode, updateView] = useState(<SingleSemester />);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1 >UD CIS Scheduler</h1>\n                <div className=\"col text-center\">\n                    <button type=\"button\" className=\"btn btn-secondary m-3\" onClick={() => updateView(<MultiSemester />)}>My Plan</button>\n                    <button type=\"button\" className=\"btn btn-secondary m-3\" onClick={() => updateView(<SingleSemester />)}>Edit Semesters</button>\n                </div>\n            </header>\n\n            <div className=\"text-left\"><img className=\"logo\" src={logo} alt=\"Logo\" /></div>\n            <hr></hr>\n\n            {view_mode}\n\n\n\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}